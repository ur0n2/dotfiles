# use UTF8
set -g utf8
set-window-option -g utf8 on
 
# prefix change
set-option -g prefix C-a
unbind-key C-b
bind-key C-a last-window
bind-key a send-prefix

# some useful
bind-key : command-prompt
bind-key r source-file ~/.tmux.conf \; display "Reloaded from ~/.tmux.conf"
bind-key L clear-history

# simple command in tmux. like a 'ping localhost'
bind-key / command-prompt "split-window 'exec %%'"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
# cwd(current working directory) of current pane linkage
bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
# used current cwd at new window create
bind c new-window -c "#{pane_current_path}"

# move windows
bind-key 1 select-window -t :1
bind-key 2 select-window -t :2
bind-key 3 select-window -t :3
bind-key 4 select-window -t :4
bind-key 5 select-window -t :5
bind-key 6 select-window -t :6
bind-key 7 select-window -t :7
bind-key 8 select-window -t :8
bind-key 9 select-window -t :9

#bind-key , previous-window         # select left
#bind-key . next-window             # select right
bind-key Left previous-window      # move left
bind-key Right next-window         # move left

#bind-key S-Left swap-window -t :-
#bind-key S-Right swap-window -t :+
#bind-key / command-prompt "move-window -t '%%'"

# no delay when swithcing modes (copy mode, etc.)
set -sg escape-time 0
set-window-option -g display-panes-time 1500

# Make the current window the first window
bind-key T swap-window -t 1

# mouse control enable/disable \ = enter
bind-key m \
	set -g mouse-utf8 on \;\
	set -g mouse on \;\
	display 'Mouse: ON'

bind-key M \
	set -g mouse-utf8 off \;\
	set -g mouse off \;\
	display 'Mouse: OFF' 


# default command and automatic-renaming
#set-option -g default-command "zsh"
set-window-option -g automatic-rename off

# use vim keybind-keyings in copy mode
setw -g mode-keys vi

# map Vi movement keys as pane movement keys
#bind-key h select-pane -L
#bind-key j select-pane -D
#bind-key k select-pane -U
#bind-key l select-pane -R
#bind-key w select-pane -l #select last pane
#bind-key -n M-W last-pane

# resize panes using PREFIX H, J, K, L
#bind-key -r H resize-pane -L 5
#bind-key -r J resize-pane -D 5
#bind-key -r K resize-pane -U 5
#bind-key -r L resize-pane -R 5

# Appereance

# colors
set -g default-terminal "screen-256color"

# base index start on 1
set-option -g base-index 1
set-option -g pane-base-index 1

# Status Bar
# Update status every 1 seconds
#set-option -g status-interval 1

# Set title, which is also showed at iTerm tab
# For special character sequences such as #S, refer to manual
set-option -g set-titles on
set-option -g set-titles-string '#S #I:#W (#h)' # session name, window index, window title, hostname

# Status Bar: auto-generated by tmuxline.vim
set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=colour231,bg=colour31"
#set -g status-right-style "none"
set -g pane-active-border-style "fg=colour254"
set -g status-utf8 "on"
set -g status-style "bg=colour234,none"
set -g message-style "fg=colour231,bg=colour31"
set -g pane-border-style "fg=colour240"
#set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-style "fg=colour250,bg=colour234,underscore"
setw -g window-status-separator ""
setw -g window-status-style "fg=colour250,bg=colour234,none"
set -g status-left "#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold,nounderscore,noitalics]::"
#set -g status-right "#[fg=colour236,bg=colour234,nobold,nounderscore,noitalics]::#[fg=colour247,bg=colour236] %d-%h-%Y :: %H:%M %p #[fg=colour252,bg=colour236,nobold,nounderscore,noitalics]::#[fg=colour235,bg=colour252] #h "
setw -g window-status-format "#[fg=colour31,bg=colour234] #I#F#[fg=colour250,bg=colour234] #W "
setw -g window-status-current-format "#[fg=colour234,bg=colour31,nobold,nounderscore,noitalics]::#[fg=colour87,bg=colour31] #I#F#[fg=colour231,bg=colour31,bold] #W #[fg=colour31,bg=colour234,nobold,nounderscore,noitalics]::"

# pane border colors
set-option -g pane-border-fg colour238     # inactive pane border: gray
set-option -g pane-border-bg default
set-option -g pane-active-border-fg green  # active pane border: green
set-option -g pane-active-border-bg default

# window notifications
set-window-option -g monitor-activity on
set-option -g visual-activity off          # no 'Activity in window <n>'

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Environment should be read from the parent environment
set -g update-environment -r


# More history and scrollback
set -g history-limit 100000

#set-option -g @cpu_icon "@"

set -g status-interval 2
set -g status-right-length 58
#set -g status-right "CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M "

#without host name #h
set -g status-right "#[fg=colour236,bg=colour234,nobold,nounderscore,noitalics]::#[fg=colour247,bg=colour236] %d-%h-%Y :: %H:%M %p #[fg=colour252,bg=colour236,nobold,nounderscore,noitalics]::#[fg=colour235,bg=colour252] #[fg=black,bg=white]#{cpu_icon}CPU:#{cpu_percentage} #{cpu_icon}MEM:#(tmux-mem-cpu-load --interval 2)#[default]"

# 3. Tmux Plugins
# ===================
		
  set -g @tpm_plugins '         \
    tmux-plugins/tpm            \
    tmux-plugins/tmux-resurrect \
    tmux-plugins/tmux-continuum \
    tmux-plugins/tmux-cpu \
  '

  ## Plugin: Resurrect
    # Set directory to save TMUX environments
    set -g @resurrect-dir '.tmux/resurrect'
    # Enable saving and restoring tmux pane contents
    set -g @resurrect-capture-pane-contents 'on'
    # Configuration for advanced restoring
    set -g @resurrect-processes '                 \
      vi vim nvim gvim emacs man less more tail   \
      top htop glances iotop iftop sudo           \
      ssh irssi weechat mutt                      \
      python ipython git tig mysql sqlite3 psql   \
    '

  ## Plugin: tmux-resurrect
    set -g @resurrect-save 'S'
    set -g @resurrect-restore 'R'

  ## Plugin: tmux-continuum
    set -g @continuum-restore 'on'
    set -g @continuum-save-interval '60'

  run-shell '~/.tmux/plugins/tpm/tpm'
  run-shell '~/.tmux/plugins/tmux-cpu/cpu.tmux'
  run-shell '~/.tmux/plugins/tmux-resurrect/resurrect.tmux'
  run-shell '~/.tmux/plugins/tmux-continuum/continuum.tmux'	

